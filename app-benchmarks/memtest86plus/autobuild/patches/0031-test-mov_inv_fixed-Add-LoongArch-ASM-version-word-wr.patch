From 03720807dbb6d3d92ee5f291467db4b7a6075611 Mon Sep 17 00:00:00 2001
From: Chao Li <lichao@loongson.cn>
Date: Thu, 13 Jun 2024 14:44:07 +0800
Subject: [PATCH 31/43] test/mov_inv_fixed: Add LoongArch ASM version word
 write operation

Add LoongArch ASM version word write cycle if it uses the HAND_OPTIMISED.

Signed-off-by: Chao Li <lichao@loongson.cn>
---
 tests/mov_inv_fixed.c | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/tests/mov_inv_fixed.c b/tests/mov_inv_fixed.c
index 8320766..7e6b82d 100644
--- a/tests/mov_inv_fixed.c
+++ b/tests/mov_inv_fixed.c
@@ -61,7 +61,7 @@ int test_mov_inv_fixed(int my_cpu, int iterations, testword_t pattern1, testword
             }
             test_addr[my_cpu] = (uintptr_t)p;
 #if HAND_OPTIMISED
-#ifdef __x86_64__
+#if defined(__x86_64__)
             uint64_t length = pe - p + 1;
             __asm__  __volatile__ ("\t"
                 "rep    \n\t"
@@ -71,7 +71,7 @@ int test_mov_inv_fixed(int my_cpu, int iterations, testword_t pattern1, testword
                 :
             );
             p = pe;
-#else
+#elif defined(__i386__)
             uint32_t length = pe - p + 1;
             __asm__  __volatile__ ("\t"
                 "rep    \n\t"
@@ -81,6 +81,19 @@ int test_mov_inv_fixed(int my_cpu, int iterations, testword_t pattern1, testword
                 :
             );
             p = pe;
+#elif defined(__loongarch_lp64)
+            uint64_t length = pe - p + 1;
+            __asm__  __volatile__ ("\t"
+                "loop:               \n\t"
+                "st.d %2, %1, 0x0    \n\t"
+                "addi.d %1, %1, 0x8  \n\t"
+                "addi.d %0, %0, -0x1 \n\t"
+                "bnez %0, loop       \n\t"
+                :
+                : "r" (length), "r" (p), "r" (pattern1)
+                : "memory"
+            );
+            p = pe;
 #endif
 #else
             do {
-- 
2.43.4

