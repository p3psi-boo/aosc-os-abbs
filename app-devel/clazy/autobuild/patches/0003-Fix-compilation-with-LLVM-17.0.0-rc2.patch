From 6527bccbab603a5713dc06e935b5bb363f80946d Mon Sep 17 00:00:00 2001
From: Cristian Adam <cristian.adam@gmail.com>
Date: Mon, 14 Aug 2023 18:16:01 +0200
Subject: [PATCH 3/4] Fix compilation with LLVM 17.0.0 (rc2)

Change-Id: I9d3fc86185c1e7c86145da043e1982d2979b36e9
---
 .../unexpected-flag-enumerator-value.cpp            | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/src/checks/manuallevel/unexpected-flag-enumerator-value.cpp b/src/checks/manuallevel/unexpected-flag-enumerator-value.cpp
index ae1e6072..53465f8e 100644
--- a/src/checks/manuallevel/unexpected-flag-enumerator-value.cpp
+++ b/src/checks/manuallevel/unexpected-flag-enumerator-value.cpp
@@ -61,8 +61,15 @@ static bool isIntentionallyNotPowerOf2(EnumConstantDecl *en) {
     if (val.isMask() && val.countTrailingOnes() >= MinOnesToQualifyAsMask)
         return true;
 
-    if (val.isShiftedMask() && val.countPopulation() >= MinOnesToQualifyAsMask)
+#if LLVM_VERSION_MAJOR >= 17
+    if (val.isShiftedMask() && val.popcount() >= MinOnesToQualifyAsMask) {
         return true;
+    }
+#else
+    if (val.isShiftedMask() && val.countPopulation() >= MinOnesToQualifyAsMask) {
+        return true;
+    }
+#endif
 
     if (clazy::contains_lower(en->getName(), "mask"))
         return true;
@@ -158,7 +165,11 @@ void UnexpectedFlagEnumeratorValue::VisitDecl(clang::Decl *decl)
 
     for (EnumConstantDecl* enumerator : enumerators) {
         const auto &initVal = enumerator->getInitVal();
+#if LLVM_VERSION_MAJOR >= 17
+        if (!initVal.isPowerOf2() && !initVal.isZero() && !initVal.isNegative()) {
+#else
         if (!initVal.isPowerOf2() && !initVal.isNullValue() && !initVal.isNegative()) {
+#endif
             if (isIntentionallyNotPowerOf2(enumerator))
                 continue;
             const auto value = enumerator->getInitVal().getLimitedValue();
-- 
2.44.0

